<div id="map"></div>
<%= form_tag(brewmap_path, :method => "get", id: "search-form") do %>
<%= text_field_tag :search, params[:search], placeholder: "Search Brewmap", class: "form-control" %>
<%= submit_tag "Search" %>
<% end %>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAYIwla-PLCt43EXoOMRZIKILfvOPyRBG8"></script>
<script type="text/javascript">
function initialize() {
  var mapOptions = {
    zoom: 5,
    center: new google.maps.LatLng(37.09024, -95.712891),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };

  map = new google.maps.Map(document.getElementById('map'),
      mapOptions);
  new google.maps.Marker({map:map,position:map.getCenter()})

  var marker, i;
  var markers = [];
  var location = <%= @markers.html_safe %>;
  for (var i = 0; i < location.length; i++) {
    var obj = location[i]
    var marker = new google.maps.Marker({
      position: new google.maps.LatLng(obj.lat, obj.lng),
      map: map,
      title: obj.title
    });
    markers.push(marker);
  }

  var clusterStyles = [
    {
      textColor: 'white',
      url: '<%= asset_path('marker.png') %>',
      height: 50,
      width: 50
    }
  ];
  var mcOptions = {
    gridSize: 50,
    styles: clusterStyles,
    maxZoom: 15,
    averageCenter: true
  };
  var markerclusterer = new MarkerClusterer(map, markers, mcOptions);

  google.maps.event.addListener(map, 'center_changed', function() {

    //a value to determine whether the map has been resized
    var size=[this.getDiv().offsetWidth,this.getDiv().offsetHeight].join('x');

    //when the center has changed, but not the size of the map
    if(!this.get('size') || size===this.get('size')){
      console.log('ccc');
      this.setValues({size:size,_center:this.getCenter()});
    }
    //when the map has been resized
    else{
      google.maps.event.addListenerOnce(this,'idle',function(){console.log('rrr');
      this.setValues({size:size,center:this.get('_center')});});
    }
  });
  //trigger the resize-event to initialize the size and _center-values
  google.maps.event.trigger(map,'center_changed',{});
  }

  google.maps.event.addDomListener(window, 'load', initialize);
</script>
